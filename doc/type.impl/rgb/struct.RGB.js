(function() {var type_impls = {
"rlottie":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; RGB&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">new</a>(r: T, g: T, b: T) -&gt; RGB&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Convenience function for creating a new pixel\nThe order of arguments is R,G,B</p>\n</div></details></div></details>",0,"rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/adapters/cloned/struct.Cloned.html\" title=\"struct core::iter::adapters::cloned::Cloned\">Cloned</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'_, T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Iterate over color components (R, G, and B)</p>\n</div></details></div></details>",0,"rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.alpha\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">alpha</a>(&amp;self, a: T) -&gt; RGBA&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Convenience function for converting to RGBA</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_alpha\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_alpha</a>&lt;A&gt;(&amp;self, a: A) -&gt; RGBA&lt;T, A&gt;</h4></section></summary><div class=\"docblock\"><p>Convenience function for converting to RGBA with alpha channel of a different type than type of the pixels</p>\n</div></details></div></details>",0,"rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT%5D%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-AsMut%3C%5BT%5D%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[T]</a>&gt; for RGB&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T]>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CT%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-Add%3CT%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T&gt; for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</span></h3></section></summary><div class=\"docblock\"><p><code>px + 1</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = RGB&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, r: T) -&gt; &lt;RGB&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<T>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-Add-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>,</span></h3></section></summary><div class=\"docblock\"><p><code>px + px</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = RGB&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: RGB&lt;T&gt;) -&gt; &lt;RGB&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-UpperHex-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-MulAssign%3CT%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt;,</span></h3></section></summary><div class=\"docblock\"><p><code>px * 1</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, r: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-MulAssign-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</span></h3></section></summary><div class=\"docblock\"><p><code>px * px</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: RGB&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-Sum-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = RGB&lt;T&gt;&gt;,</span></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\n“summing up” the items.</div></details></div></details>","Sum","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-DivAssign%3CT%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Output = T&gt;,</span></h3></section></summary><div class=\"docblock\"><p><code>px * 1</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, r: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CT%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-AddAssign%3CT%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;T&gt; for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</span></h3></section></summary><div class=\"docblock\"><p><code>px + 1</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, r: T)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<T>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-AddAssign-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</span></h3></section></summary><div class=\"docblock\"><p><code>px + px</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: RGB&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-RGB%3CComponentType%3E\" class=\"impl\"><a href=\"#impl-Ord-for-RGB%3CComponentType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ComponentType&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for RGB&lt;ComponentType&gt;<span class=\"where fmt-newline\">where\n    ComponentType: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;RGB&lt;ComponentType&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#826-828\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#846-848\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#871-874\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-RGB%3CComponentType%3E\" class=\"impl\"><a href=\"#impl-Default-for-RGB%3CComponentType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ComponentType&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for RGB&lt;ComponentType&gt;<span class=\"where fmt-newline\">where\n    ComponentType: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; RGB&lt;ComponentType&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT%5D%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-AsRef%3C%5BT%5D%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[T]</a>&gt; for RGB&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T]>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-Mul-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</span></h3></section></summary><div class=\"docblock\"><p><code>px * px</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = RGB&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: RGB&lt;T&gt;) -&gt; &lt;RGB&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-Mul%3CT%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt;,</span></h3></section></summary><div class=\"docblock\"><p><code>px * 1</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = RGB&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, r: T) -&gt; &lt;RGB&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(T,+T,+T)%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-Into%3C(T,+T,+T)%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.tuple.html\">(T, T, T)</a>&gt; for RGB&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.tuple.html\">(T, T, T)</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(T, T, T)>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C%5BT;+3%5D%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-Into%3C%5BT;+3%5D%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">[T; 3]</a>&gt; for RGB&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">[T; 3]</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<[T; 3]>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ComponentSlice%3CT%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-ComponentSlice%3CT%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ComponentSlice&lt;T&gt; for RGB&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method trait-impl\"><a href=\"#method.as_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>The components interpreted as an array, e.g. one <code>RGB</code> expands to 3 elements. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice\" class=\"method trait-impl\"><a href=\"#method.as_mut_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_mut_slice</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>The components interpreted as a mutable array, e.g. one <code>RGB</code> expands to 3 elements. <a>Read more</a></div></details></div></details>","ComponentSlice<T>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cu64%3E\" class=\"impl\"><a href=\"#impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;&gt; for RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RGB<u16>>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T)%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-From%3C(T,+T,+T)%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.tuple.html\">(T, T, T)</a>&gt; for RGB&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.tuple.html\">(T, T, T)</a>) -&gt; RGB&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T)>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+3%5D%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-From%3C%5BT;+3%5D%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">[T; 3]</a>&gt; for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">[T; 3]</a>) -&gt; RGB&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 3]>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cf64%3E\" class=\"impl\"><a href=\"#impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cf64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;&gt; for RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RGB<u16>>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGray%3CT%3E%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-From%3CGray%3CT%3E%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Gray&lt;T&gt;&gt; for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: Gray&lt;T&gt;) -&gt; RGB&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Gray<T>>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cu16%3E\" class=\"impl\"><a href=\"#impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;&gt; for RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RGB<u8>>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cf32%3E\" class=\"impl\"><a href=\"#impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cf32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;&gt; for RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RGB<u16>>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Ci32%3E\" class=\"impl\"><a href=\"#impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;&gt; for RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RGB<u16>>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Ci16%3E\" class=\"impl\"><a href=\"#impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;&gt; for RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RGB<u8>>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRGB%3Ci16%3E%3E-for-RGB%3Cf32%3E\" class=\"impl\"><a href=\"#impl-From%3CRGB%3Ci16%3E%3E-for-RGB%3Cf32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i16.html\">i16</a>&gt;&gt; for RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RGB<i16>>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRGB%3Cf32%3E%3E-for-RGB%3Cf64%3E\" class=\"impl\"><a href=\"#impl-From%3CRGB%3Cf32%3E%3E-for-RGB%3Cf64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a>&gt;&gt; for RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a>&gt;) -&gt; RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RGB<f32>>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cf32%3E\" class=\"impl\"><a href=\"#impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cf32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;&gt; for RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RGB<u8>>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRGB%3Ci16%3E%3E-for-RGB%3Cf64%3E\" class=\"impl\"><a href=\"#impl-From%3CRGB%3Ci16%3E%3E-for-RGB%3Cf64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i16.html\">i16</a>&gt;&gt; for RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RGB<i16>>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRGB%3Ci32%3E%3E-for-RGB%3Cf64%3E\" class=\"impl\"><a href=\"#impl-From%3CRGB%3Ci32%3E%3E-for-RGB%3Cf64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;&gt; for RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RGB<i32>>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cu32%3E\" class=\"impl\"><a href=\"#impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;&gt; for RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RGB<u8>>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cu32%3E\" class=\"impl\"><a href=\"#impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;&gt; for RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RGB<u16>>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBGR%3CT%3E%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-From%3CBGR%3CT%3E%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BGR&lt;T&gt;&gt; for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: BGR&lt;T&gt;) -&gt; RGB&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BGR<T>>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cf64%3E\" class=\"impl\"><a href=\"#impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cf64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;&gt; for RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; RGB&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RGB<u8>>","rlottie::Rgb"],["<section id=\"impl-Copy-for-RGB%3CComponentType%3E\" class=\"impl\"><a href=\"#impl-Copy-for-RGB%3CComponentType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ComponentType&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for RGB&lt;ComponentType&gt;<span class=\"where fmt-newline\">where\n    ComponentType: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</span></h3></section>","Copy","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CT%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-Sub%3CT%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T&gt; for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt;,</span></h3></section></summary><div class=\"docblock\"><p><code>px - 1</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = RGB&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, r: T) -&gt; &lt;RGB&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<T>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-Sub-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,</span></h3></section></summary><div class=\"docblock\"><p><code>px - px</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = RGB&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: RGB&lt;T&gt;) -&gt; &lt;RGB&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","rlottie::Rgb"],["<section id=\"impl-StructuralPartialEq-for-RGB%3CComponentType%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-RGB%3CComponentType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ComponentType&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for RGB&lt;ComponentType&gt;</h3></section>","StructuralPartialEq","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-RGB%3CComponentType%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-RGB%3CComponentType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ComponentType&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for RGB&lt;ComponentType&gt;<span class=\"where fmt-newline\">where\n    ComponentType: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;RGB&lt;ComponentType&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ColorComponentMap%3CRGB%3CB%3E,+T,+B%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-ColorComponentMap%3CRGB%3CB%3E,+T,+B%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, B&gt; ColorComponentMap&lt;RGB&lt;B&gt;, T, B&gt; for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_c\" class=\"method trait-impl\"><a href=\"#method.map_c\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">map_c</a>&lt;F&gt;(&amp;self, f: F) -&gt; RGB&lt;B&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; B,</span></h4></section></summary><div class='docblock'>Convenience function for applying the same formula to every rgb/gray component, but skipping the alpha component. <a>Read more</a></div></details></div></details>","ColorComponentMap<RGB<B>, T, B>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-Display-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ComponentMap%3CRGB%3CB%3E,+T,+B%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-ComponentMap%3CRGB%3CB%3E,+T,+B%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, B&gt; ComponentMap&lt;RGB&lt;B&gt;, T, B&gt; for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">map</a>&lt;F&gt;(&amp;self, f: F) -&gt; RGB&lt;B&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; B,</span></h4></section></summary><div class='docblock'>Convenience function (equivalent of <code>self.iter().map().collect()</code>) for applying the same formula to every component. <a>Read more</a></div></details></div></details>","ComponentMap<RGB<B>, T, B>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-LowerHex-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","rlottie::Rgb"],["<section id=\"impl-Eq-for-RGB%3CComponentType%3E\" class=\"impl\"><a href=\"#impl-Eq-for-RGB%3CComponentType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ComponentType&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for RGB&lt;ComponentType&gt;<span class=\"where fmt-newline\">where\n    ComponentType: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</span></h3></section>","Eq","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-SubAssign-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</span></h3></section></summary><div class=\"docblock\"><p><code>px - px</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: RGB&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CT%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-SubAssign%3CT%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;T&gt; for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt;,</span></h3></section></summary><div class=\"docblock\"><p><code>px - 1</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, r: T)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<T>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-RGB%3CComponentType%3E\" class=\"impl\"><a href=\"#impl-Debug-for-RGB%3CComponentType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ComponentType&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for RGB&lt;ComponentType&gt;<span class=\"where fmt-newline\">where\n    ComponentType: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-RGB%3CComponentType%3E\" class=\"impl\"><a href=\"#impl-PartialOrd-for-RGB%3CComponentType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ComponentType&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for RGB&lt;ComponentType&gt;<span class=\"where fmt-newline\">where\n    ComponentType: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;RGB&lt;ComponentType&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1122\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1139\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1155\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#1172\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-RGB%3CComponentType%3E\" class=\"impl\"><a href=\"#impl-Clone-for-RGB%3CComponentType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ComponentType&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for RGB&lt;ComponentType&gt;<span class=\"where fmt-newline\">where\n    ComponentType: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; RGB&lt;ComponentType&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-RGB%3CComponentType%3E\" class=\"impl\"><a href=\"#impl-Hash-for-RGB%3CComponentType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ComponentType&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for RGB&lt;ComponentType&gt;<span class=\"where fmt-newline\">where\n    ComponentType: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut __H</a>)<span class=\"where fmt-newline\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rlottie::Rgb"],["<section id=\"impl-StructuralEq-for-RGB%3CComponentType%3E\" class=\"impl\"><a href=\"#impl-StructuralEq-for-RGB%3CComponentType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ComponentType&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for RGB&lt;ComponentType&gt;</h3></section>","StructuralEq","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-Div%3CT%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Output = T&gt;,</span></h3></section></summary><div class=\"docblock\"><p><code>px / 1</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = RGB&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, r: T) -&gt; &lt;RGB&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","rlottie::Rgb"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CT%3E-for-RGB%3CT%3E\" class=\"impl\"><a href=\"#impl-FromIterator%3CT%3E-for-RGB%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;T&gt; for RGB&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(into_iter: I) -&gt; RGB&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Takes exactly 3 elements from the iterator and creates a new instance.\nPanics if there are fewer elements in the iterator.</p>\n</div></details></div></details>","FromIterator<T>","rlottie::Rgb"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()